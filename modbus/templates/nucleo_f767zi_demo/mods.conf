package genconfig

configuration conf {
	@Runlevel(0) include embox.arch.system(core_freq=216000000)
	@Runlevel(0) include embox.arch.arm.cortexm3.bundle
	include platform.stm32.f7.nucleo_f767zi.bsp
	include embox.arch.arm.vfork
	include embox.arch.arm.libarch

	@Runlevel(0) include embox.arch.arm.armmlib.armv7m_cpu_cache(
		log_level=4,
		sram_nocache_section_size=0x4000		
	)

	@Runlevel(0) include embox.kernel.stack(stack_size=8192,alignment=4)

	@Runlevel(0) include embox.arch.arm.fpu.cortex_m7_fp
	@Runlevel(0) include embox.arch.arm.fpu.fpv5(log_level=3)

	@Runlevel(0) include embox.arch.arm.armmlib.interrupt
	@Runlevel(0) include embox.arch.arm.armmlib.exception_entry(irq_stack_size=1024)
	@Runlevel(0) include embox.arch.arm.armmlib.lthread_own_stack(stack_size=1024)

	@Runlevel(1) include embox.driver.interrupt.cortexm_nvic
	@Runlevel(1) include embox.driver.clock.cortexm_systick
	include embox.kernel.time.jiffies(cs_name="cortexm_systick")

	@Runlevel(1) include embox.driver.serial.stm_usart_f7
	@Runlevel(1) include embox.driver.serial.stm_diag(baud_rate=115200, usartx=3)
	@Runlevel(1) include embox.driver.diag(impl="embox__driver__serial__stm_diag")
	@Runlevel(1) include embox.driver.serial.stm_ttyS0(baud_rate=115200, usartx=3)

	@Runlevel(1) include embox.driver.gpio.stm32_gpio_f7
	@Runlevel(1) include embox.driver.input.button.stm32cube_button
	@Runlevel(2) include embox.driver.input.input_dev_devfs

	@Runlevel(2) include embox.driver.net.stm32f7cube_eth
	@Runlevel(2) include embox.driver.net.loopback

	@Runlevel(2) include embox.driver.flash.stm32f7cube(flash_size=0x10000)
	@Runlevel(2) include embox.driver.flash.flash_fs

	include embox.driver.char_dev
	include embox.driver.tty.task_breaking_disable
	include embox.driver.block_dev

	include embox.kernel.critical
	include embox.kernel.irq_static

	include embox.kernel.task.multi
	include embox.kernel.task.task_table(task_table_size=6)
	include embox.kernel.task.resource.idesc_table(idesc_table_size=20)
	include embox.kernel.task.resource.env(env_str_len=64)

	include embox.kernel.thread.thread_local_none
	include embox.kernel.thread.thread_cancel_disable
	include embox.kernel.sched.sched
	include embox.kernel.sched.idle_light
	include embox.kernel.thread.signal.siginfoq
	include embox.kernel.lthread.lthread
	include embox.kernel.thread.core(thread_pool_size=3,thread_stack_size=6600)
	/* tty requires */
	include embox.kernel.thread.mutex

	include embox.compat.libc.math_openlibm
	include embox.compat.posix.proc.vfork_exchanged
	include embox.compat.posix.proc.exec_exchanged
	include embox.compat.posix.proc.exec
	include embox.compat.posix.util.nanosleep
	include embox.compat.posix.idx.select
	include embox.compat.posix.net.gai_strerror
	include embox.compat.posix.net.getaddrinfo

	include embox.util.LibUtil
	include embox.util.hashtable
	include embox.util.log

	include embox.framework.embuild_light
	include embox.framework.LibFramework

	include embox.compat.libc.stdio.print(support_floating=0)

	include embox.mem.pool_adapter
	include embox.mem.heap_bm
	include embox.mem.static_heap(heap_size=0x4000,section="")
	include embox.mem.bitmask(page_size=64)

	include embox.fs.dvfs.core(inode_pool_size=24,file_pool_size=20,dentry_pool_size=24)

	include embox.fs.driver.dfs(block_size=0x4000)
	include embox.fs.driver.initfs_dvfs(file_quantity=16)
	include embox.fs.rootfs_dvfs(fstype="initfs")
	include embox.compat.posix.fs.all_dvfs
	include embox.fs.driver.devfs_dvfs
	include embox.fs.syslib.perm_stub

	include embox.net.skbuff(amount_skb=16)
	include embox.net.skbuff_data(amount_skb_data=16)
	include embox.net.sock_noxattr
	include embox.net.tcp
	include embox.net.udp
	include embox.net.tcp_sock(amount_tcp_sock=20, max_simultaneous_tx_pack=2)
	include embox.net.udp_sock
	include embox.net.af_packet

	@Runlevel(2) include embox.cmd.sh.shell_registry(input_buff_sz=80)
	include embox.init.setup_tty_diag
	@Runlevel(3) include embox.init.start_script(shell_name="tish")

	@Runlevel(2) include embox.cmd.sh.tish(builtin_commands = "cd export exit logout httpd")

	include embox.cmd.service(services_count=2)
	include embox.cmd.help
	include embox.cmd.msleep
	include embox.cmd.sys.version

	include embox.cmd.fs.ls
	include embox.cmd.fs.cat
	include embox.cmd.fs.dd
	include embox.cmd.fs.mount
	include embox.cmd.fs.mkdir

	include embox.cmd.net.ifconfig
	include embox.cmd.net.route
	include embox.cmd.net.ping
	include embox.cmd.net.httpd
	include embox.cmd.net.httpd_cgi(use_real_cmd=true, use_parallel_cgi=false)
	include embox.cmd.net.bootpc
	include embox.cmd.net.netmanager

	include third_party.lib.libmodbus

	include iocontrol.modbus.http_admin
	include iocontrol.modbus.cmd.flash_settings
	include iocontrol.modbus.cmd.led_names
	include iocontrol.modbus.cmd.modbus_server
	include iocontrol.modbus.cmd.led_driver

	include embox.service.cgi_cmd_wrapper(cmds_check=true, allowed_cmds="led_driver led_names flash_settings")

	include iocontrol.modbus.lib.libleddrv(leds_quantity=2)
	include iocontrol.modbus.lib.libleddrv_ll_stm32_f4_demo

	include embox.compat.posix.pthread_key
	include embox.compat.posix.time.time
/* C++ */
	@Runlevel (2) include embox.lib.cxx.ConstructionGlobal
	include embox.lib.cxx.DestructionStatic(table_size=8)

	include third_party.gcc.libgcc
	include third_party.gcc.libstdcxx
	include third_party.gcc.libsupcxx

	/* STL example */
	include embox.cmd.testing.cxx.stl_demo_sort1

}
